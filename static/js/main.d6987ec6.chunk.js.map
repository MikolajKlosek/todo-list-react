{"version":3,"sources":["GlobalStyle.js","Form/styled.js","Form/index.js","Tasks/styled.js","Tasks/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Header/index.js","Container/styled.js","Container/index.js","App.js","reportWebVitals.js","index.js","theme.js"],"names":["GlobalStyle","createGlobalStyle","_templateObject","_taggedTemplateLiteral","_ref","theme","color","gallery","StyledForm","styled","form","breakpoint","mobileMax","Input","input","_templateObject2","_ref2","alto","Button","button","_templateObject3","_ref3","teal","_ref4","white","Form","addNewTask","newTaskContent","setNewTaskContent","useState","inputRef","useRef","React","createElement","onSubmit","event","preventDefault","trimmedNewTaskContent","trim","current","focus","value","ref","placeholder","onChange","target","List","ul","Item","li","hidden","css","Content","span","_templateObject4","done","_templateObject5","_templateObject6","_ref5","toggleDone","_templateObject7","_ref6","forestGreen","_ref7","remove","_templateObject8","_ref8","crimson","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","key","id","onClick","content","Wrapper","div","silver","Buttons","toggleHideDone","setAllDone","length","Fragment","disabled","every","section","Header","header","Title","h2","Body","Section","title","body","extraHeaderContent","Container","children","getInitialTasks","tasksFromLocalStorage","localStorage","getItem","JSON","parse","App","setHideDone","setTasks","useEffect","setItem","stringify","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","ThemeProvider","black","document","getElementById"],"mappings":"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","file":"static/js/main.d6987ec6.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before {\r\n        box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n        font-family: 'Montserrat', sans-serif;\r\n        background: ${({ theme }) => theme.color.gallery};\r\n    }\r\n\r\n    button {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    display: grid;\r\n    grid-template-columns: 1fr auto;\r\n    grid-gap: 20px;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    padding: 10px;\r\n    border: 1px solid  ${({ theme }) => theme.color.alto};\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    padding: 10px;\r\n    background: ${({ theme }) => theme.color.teal};\r\n    color: ${({ theme }) => theme.color.white};\r\n    border: none;\r\n    transition: 0.3s;\r\n\r\n    &:hover {\r\n        filter: brightness(110%);\r\n        transform: scale(1.1);\r\n    }\r\n\r\n    &:active {\r\n        filter: brightness(120%);\r\n    }\r\n`;","import React, { useRef } from \"react\";\r\nimport { useState } from \"react\";\r\nimport {Button, Input, StyledForm} from \"./styled\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\")\r\n    const inputRef = useRef(null);\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const trimmedNewTaskContent = newTaskContent.trim();\r\n\r\n        if (!trimmedNewTaskContent) {\r\n            return;\r\n        }\r\n\r\n        addNewTask(trimmedNewTaskContent);\r\n        setNewTaskContent(\"\");\r\n        inputRef.current.focus();\r\n    };\r\n\r\n    return (\r\n        <StyledForm onSubmit={onFormSubmit}>\r\n            <Input\r\n                value={newTaskContent}\r\n                ref={inputRef}\r\n                placeholder=\"Co jest do zrobienia?\"\r\n                onChange={({ target }) => setNewTaskContent(target.value)}\r\n            />\r\n            <Button>Dodaj zadanie</Button>\r\n        </StyledForm>\r\n    )\r\n};\r\n\r\nexport default Form;","import styled, { css } from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 0;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n    padding: 10px;\r\n    border-bottom: 1px solid ${({ theme }) => theme.color.alto};\r\n    display: grid;\r\n    grid-template-columns: auto 1fr auto;\r\n    align-items: center;\r\n    grid-gap: 10px;\r\n\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const Content = styled.span`\r\n    ${({ done }) => done && css`\r\n        text-decoration: line-through;\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    width: 30px;\r\n    height: 30px;\r\n    color: ${({ theme }) => theme.color.white};\r\n    border: none;\r\n    padding: 0;\r\n    transition: filter 0.5s;\r\n\r\n    ${({ toggleDone }) => toggleDone && css`\r\n        background: ${({ theme }) => theme.color.forestGreen};;\r\n    `}    \r\n\r\n    ${({ remove }) => remove && css`\r\n        background: ${({ theme }) => theme.color.crimson};\r\n    `}   \r\n\r\n    &:hover {\r\n        filter: brightness(110%);\r\n    }\r\n\r\n    &:active {\r\n        filter: brightness(120%);\r\n    }\r\n`;","import React from \"react\";\r\nimport { List, Item, Content, Button } from \"./styled\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n    <List>\r\n        {tasks.map(task => (\r\n            <Item\r\n                key={task.id}\r\n                hidden={task.done && hideDone}\r\n            >\r\n                <Button\r\n                    toggleDone\r\n                    onClick={() => toggleTaskDone(task.id)}\r\n                >\r\n                    {task.done ? \"✔\" : \"\"}\r\n                </Button>\r\n                <Content done={task.done}>\r\n                    {task.content}\r\n                </Content>\r\n                <Button \r\n                    remove\r\n                    onClick={() => removeTask(task.id)}\r\n                >\r\n                    🗑\r\n                </Button>\r\n            </Item>\r\n        ))}\r\n    </List>\r\n);\r\n\r\nexport default Tasks","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    background: transparent;\r\n    color: ${({theme}) => theme.color.teal};\r\n    border: none;\r\n    margin: 0 0 0 20px;\r\n    transition: filter 0.3s;\r\n\r\n    @media(max-width: ${({theme}) => theme.breakpoint.mobileMax}px) {\r\n        flex-basis: 100%;\r\n        margin: 10px;\r\n    }\r\n\r\n    &:hover {\r\n        filter: brightness(110%);\r\n    }\r\n\r\n    &:active {\r\n        filter: brightness(120%);\r\n    }\r\n\r\n    &:disabled {\r\n        color: ${({theme}) => theme.color.silver};\r\n    }\r\n`;","import React from \"react\";\r\nimport {Wrapper, Button} from \"./styled\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n    <Wrapper>\r\n        {tasks.length > 0 && (\r\n            <>\r\n                <Button onClick={toggleHideDone}>\r\n                    {hideDone ? \"Pokaż\" : \"Ukryj\"} ukończone\r\n                </Button>\r\n                <Button\r\n                    onClick={setAllDone}\r\n                    disabled={tasks.every(({ done }) => done)}\r\n                >\r\n                    Ukończ wszystkie\r\n                </Button>\r\n            </>\r\n        )}\r\n    </Wrapper>\r\n);\r\n\r\nexport default Buttons","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.section`\r\n    margin: 10px 0;\r\n    background: ${({ theme }) => theme.color.white};\r\n    box-shadow: 0 0 5px ${({ theme }) => theme.color.alto};\r\n`;\r\n\r\nexport const Header = styled.header`\r\n    border-bottom: 1px solid ${({ theme }) => theme.color.alto};\r\n    display: grid;\r\n    grid-template-columns: auto auto;\r\n    grid-gap: 20px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 20px;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n    font-size: 20px;\r\n    margin: 0;\r\n`;\r\n\r\nexport const Body = styled.div`\r\n    padding: 20px;\r\n`;","import React from \"react\";\r\nimport { Wrapper, Body, Header, Title } from \"./styled\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n    <Wrapper>\r\n        <Header>\r\n            <Title>{title}</Title>\r\n            {extraHeaderContent}\r\n        </Header>\r\n        <Body>\r\n            {body}\r\n        </Body>\r\n    </Wrapper>\r\n);\r\n\r\nexport default Section;","import React from \"react\";\r\n\r\nconst Header = ({ title }) => (\r\n    <header>\r\n        <h1>{title}</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    max-width: 900px;\r\n    padding: 20px;\r\n    margin: 0 auto;\r\n`;","import React from \"react\";\r\nimport { Wrapper } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <Wrapper>\r\n        {children}\r\n    </Wrapper>\r\n);\r\n\r\nexport default Container;","import React, { useEffect, useState } from 'react';\nimport Form from './Form';\nimport Tasks from './Tasks';\nimport Buttons from './Buttons';\nimport Section from './Section';\nimport Header from './Header';\nimport Container from './Container';\n\nconst getInitialTasks = () => {\n  const tasksFromLocalStorage = localStorage.getItem(\"tasks\");\n\n  return tasksFromLocalStorage\n    ? JSON.parse(tasksFromLocalStorage)\n    : [];\n};\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n  const [tasks, setTasks] = useState(getInitialTasks);\n\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n\n  const removeTask = (id) => {\n    setTasks(tasks => tasks.filter(task => task.id !== id));\n  };\n\n  const toggleTaskDone = (id) => {\n    setTasks(tasks => tasks.map(task => {\n      if (task.id === id) {\n        return { ...task, done: !task.done };\n      }\n\n      return task\n    }));\n  }\n\n  const setAllDone = () => {\n    setTasks(tasks => tasks.map(task => ({\n      ...task,\n      done: true,\n    })));\n  };\n\n  const addNewTask = (content) => {\n    setTasks(tasks => [\n      ...tasks,\n      {\n        content,\n        done: false,\n        id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\n      },\n    ]);\n  }\n\n  return (\n    <Container>\n      <Header title=\"Lista zadań\" />\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        body={<Form addNewTask={addNewTask} />}\n      />\n\n      <Section\n        title=\"Lista zadań\"\n        body={\n          <Tasks\n            tasks={tasks}\n            hideDone={hideDone}\n            removeTask={removeTask}\n            toggleTaskDone={toggleTaskDone}\n          />\n        }\n        extraHeaderContent={\n          <Buttons\n            tasks={tasks}\n            hideDone={hideDone}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone}\n          />\n        }\n      />\n    </Container >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { ThemeProvider } from 'styled-components';\nimport {GlobalStyle} from \"./GlobalStyle\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { theme } from './theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\r\n    color: {\r\n        black: \"#000\",\r\n        silver: \"#ccc\",\r\n        alto: \"#ddd\",\r\n        gallery: \"#eee\",\r\n        white: \"#fff\",\r\n        teal: \"#008080\",\r\n        crimson: \"#db143c\",\r\n        forestGreen: \"#228c22\",\r\n    },\r\n    breakpoint: {\r\n        mobileMax: 767,\r\n    },\r\n};"],"sourceRoot":""}